/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.Vehicle;
import model.History;

/**
 *
 * @author namita
 */
public class CreatePanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePanel
     */
    History history;
    public CreatePanel(History history) {
        initComponents();
        this.history=history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        lblcarMake = new javax.swing.JLabel();
        lblcity = new javax.swing.JLabel();
        lblavailability = new javax.swing.JLabel();
        lblmanufacturingYear = new javax.swing.JLabel();
        lblseatCount = new javax.swing.JLabel();
        lblserialNumber = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtcarMake = new javax.swing.JTextField();
        txtcity = new javax.swing.JTextField();
        txtmanufacturingYear = new javax.swing.JTextField();
        txtseatCount = new javax.swing.JTextField();
        txtserialNumber = new javax.swing.JTextField();
        chkavailability = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        lblmaintenanceExpired = new javax.swing.JLabel();
        chkmaintenanceExpired = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtmodelNumber = new javax.swing.JTextField();
        errserialNumber = new javax.swing.JLabel();
        errcity = new javax.swing.JLabel();
        errmodelNumber = new javax.swing.JLabel();
        errCarMake = new javax.swing.JLabel();
        errseatCount = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Create Catalogue");

        lblname.setText("Name :");

        lblcarMake.setText("Car Make :");

        lblcity.setText("City :");

        lblavailability.setText("Availability :");

        lblmanufacturingYear.setText("Manufacturing Year :");

        lblseatCount.setText("Seat Count :");

        lblserialNumber.setText("Serial Number :");

        txtname.setBackground(new java.awt.Color(255, 204, 204));
        txtname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtnameFocusLost(evt);
            }
        });
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
        });

        txtcarMake.setBackground(new java.awt.Color(255, 204, 204));
        txtcarMake.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcarMakeFocusLost(evt);
            }
        });
        txtcarMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcarMakeActionPerformed(evt);
            }
        });
        txtcarMake.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcarMakeKeyReleased(evt);
            }
        });

        txtcity.setBackground(new java.awt.Color(255, 204, 204));
        txtcity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcityKeyReleased(evt);
            }
        });

        txtmanufacturingYear.setBackground(new java.awt.Color(255, 204, 204));
        txtmanufacturingYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmanufacturingYearFocusLost(evt);
            }
        });

        txtseatCount.setBackground(new java.awt.Color(255, 204, 204));
        txtseatCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtseatCountFocusLost(evt);
            }
        });
        txtseatCount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtseatCountKeyReleased(evt);
            }
        });

        txtserialNumber.setBackground(new java.awt.Color(255, 204, 204));
        txtserialNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtserialNumberFocusLost(evt);
            }
        });
        txtserialNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtserialNumberKeyReleased(evt);
            }
        });

        chkavailability.setBackground(new java.awt.Color(255, 204, 204));
        chkavailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkavailabilityActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(204, 204, 204));
        btnSave.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblmaintenanceExpired.setText("Maintenance Expired? :");

        chkmaintenanceExpired.setBackground(new java.awt.Color(255, 204, 204));
        chkmaintenanceExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkmaintenanceExpiredActionPerformed(evt);
            }
        });

        jLabel2.setText("Model Number :");

        txtmodelNumber.setBackground(new java.awt.Color(255, 204, 204));
        txtmodelNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmodelNumberKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(140, 140, 140)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblcarMake)
                                .addComponent(lblname)
                                .addComponent(lblcity)
                                .addComponent(lblavailability)
                                .addComponent(lblmanufacturingYear)
                                .addComponent(lblseatCount)
                                .addComponent(lblserialNumber)
                                .addComponent(lblmaintenanceExpired)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                .addComponent(txtcarMake)
                                .addComponent(txtcity)
                                .addComponent(txtmanufacturingYear)
                                .addComponent(txtseatCount)
                                .addComponent(txtserialNumber)
                                .addComponent(chkavailability)
                                .addComponent(chkmaintenanceExpired)
                                .addComponent(txtmodelNumber)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(215, 215, 215)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(errmodelNumber))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(errCarMake))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(errcity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errseatCount)
                            .addComponent(errserialNumber))))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblname)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcarMake)
                    .addComponent(txtcarMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errCarMake))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcity)
                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errcity))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblavailability)
                    .addComponent(chkavailability))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmanufacturingYear)
                    .addComponent(txtmanufacturingYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblseatCount)
                    .addComponent(txtseatCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errseatCount))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblserialNumber)
                    .addComponent(txtserialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errserialNumber))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmaintenanceExpired)
                    .addComponent(chkmaintenanceExpired))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtmodelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errmodelNumber))
                .addGap(56, 56, 56)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
       String name = txtname.getText();
       String carMake = txtcarMake.getText();
       String manufacturingYear = txtmanufacturingYear.getText();
       String seatCount = txtseatCount.getText();
       String serialNumber = txtserialNumber.getText() ;
       String modelNumber = txtmodelNumber.getText();
       String city = txtcity.getText();
       
       if(name.length()==0 ||carMake.length()==0 ||manufacturingYear.length()==0 ||seatCount.length()==0 ||serialNumber.length()==0 ||modelNumber.length()==0 ||city.length()==0 ){
           JOptionPane.showMessageDialog(this, "Kindly Fill all the details");
       }
           else{
        Vehicle v = history.addNewCar();

       v.setName(txtname.getText());
       v.setCarMake(txtcarMake.getText());
       v.setManufacturingYear(Integer.parseInt(txtmanufacturingYear.getText()));
       v.setCity(txtcity.getText());
       v.setSeatCount(Byte.parseByte(txtseatCount.getText()));
       v.setSerialNumber(txtserialNumber.getText() );
       v.setModelNumber(txtmodelNumber.getText());
       v.setAvailability(chkavailability.isSelected());
       v.setMaintenanceExpired(chkmaintenanceExpired.isSelected());
       JOptionPane.showMessageDialog(this, "New vehicle added !");
        
        txtmanufacturingYear.setText("");
        txtseatCount.setText("");
        txtname.setText("");
        txtcarMake.setText("");
        txtcity.setText("");
        chkavailability.setSelected(false);
        txtserialNumber.setText("");
        chkmaintenanceExpired.setSelected(false);
        txtname.setText("");
        txtcarMake.setText("");
        txtmanufacturingYear.setText("");
        txtcity.setText("");
        txtseatCount.setText("");
        txtserialNumber.setText("");
        txtmodelNumber.setText("");
        chkavailability.setSelected(false);
        chkmaintenanceExpired.setSelected(false);
                 SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
                 Date date = new Date();  
                 history.setLast_Updated(date);
        
       }  
    }//GEN-LAST:event_btnSaveActionPerformed

    private void chkavailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkavailabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkavailabilityActionPerformed

    private void chkmaintenanceExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkmaintenanceExpiredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkmaintenanceExpiredActionPerformed

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased
        // TODO add your handling code here:
        /*String PATTERN ="^[a-zA-Z].*[\\s\\.]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtname.getText());
        if(!match.matches()){
            errname.setText( "Incorrect!!");
        }
        else{
            errname.setText(null);
        }*/
        
        
        
    }//GEN-LAST:event_txtnameKeyReleased

    private void txtnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnameFocusLost
        // TODO add your handling code here:
        
        String chckName=txtname.getText();

    Pattern pattern = Pattern.compile("^[a-zA-Z- ]{1,50}$");
    Matcher matchPattern=pattern.matcher(chckName);
    if(!matchPattern.matches())
    {
     JOptionPane.showMessageDialog(this,"Please enter a valid name ! ");   
    }
    }//GEN-LAST:event_txtnameFocusLost

    private void txtcarMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcarMakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcarMakeActionPerformed

    private void txtcarMakeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcarMakeFocusLost
        // TODO add your handling code here:
        /*String chckCarMake = txtname.getText();

    Pattern pattern = Pattern.compile("^[a-zA-Z- ]{1,50}$");
    Matcher matchPattern=pattern.matcher(chckCarMake);
    if(!matchPattern.matches())
    {
     JOptionPane.showMessageDialog(this,"Please enter a valid manufacturer ! ");   
    }*/
    
    
        
    }//GEN-LAST:event_txtcarMakeFocusLost

    private void txtmanufacturingYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmanufacturingYearFocusLost
        // TODO add your handling code here:
        String chckmanufacturingYear=txtmanufacturingYear.getText();

    Pattern pattern = Pattern.compile("^[0-9]{4}$");
    Matcher matchPattern=pattern.matcher(chckmanufacturingYear);
    if(!matchPattern.matches())
    {
     JOptionPane.showMessageDialog(this,"Please enter a year ! ");   
    }
        
        
    }//GEN-LAST:event_txtmanufacturingYearFocusLost

    private void txtseatCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtseatCountFocusLost
        // TODO add your handling code here:
        /*String chckseatCount=txtseatCount.getText();

    Pattern pattern = Pattern.compile("^[0-9]{1}$");
    Matcher matchPattern=pattern.matcher(chckseatCount);
    if(!matchPattern.matches())
    {
     JOptionPane.showMessageDialog(this,"Please enter valid number ! ");   
    }*/
        
        
    }//GEN-LAST:event_txtseatCountFocusLost

    private void txtserialNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtserialNumberFocusLost
        // TODO add your handling code here:
        
        /*String chckserialNumber = txtserialNumber.getText();

    Pattern pattern = Pattern.compile("^[a-zA-Z-]{10}$");
    Matcher matchPattern=pattern.matcher(chckserialNumber);
    if(!matchPattern.matches())
    {
     JOptionPane.showMessageDialog(this,"Please enter a valid Serial Number. ! ");   
    }*/
    }//GEN-LAST:event_txtserialNumberFocusLost

    private void txtserialNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtserialNumberKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[a-zA-Z0-9]{10}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtserialNumber.getText());
        if(!match.matches()){
            errserialNumber.setText( "Incorrect! (Hint :10 !");
        }
        else{
            errserialNumber.setText(null);
        }
        
        
    }//GEN-LAST:event_txtserialNumberKeyReleased

    private void txtseatCountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtseatCountKeyReleased
        // TODO add your handling code here:        
        String PATTERN ="^[0-9]{0,1}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtseatCount.getText());
        if(!match.matches()){
            errseatCount.setText( "Incorrect!!");
        }
        else{
            errseatCount.setText(null);
        }
    }//GEN-LAST:event_txtseatCountKeyReleased

    private void txtcityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcityKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[a-zA-Z]{1,20}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtcity.getText());
        if(!match.matches()){
            errcity.setText( "Not valid !");
        }
        else{
            errcity.setText(null);
        }
    }//GEN-LAST:event_txtcityKeyReleased

    private void txtmodelNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmodelNumberKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[a-zA-Z0-9]{1,20}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtmodelNumber.getText());
        if(!match.matches()){
            errmodelNumber.setText("No special characters allowed!");
        }
        else{
            errmodelNumber.setText(null);
        }
    }//GEN-LAST:event_txtmodelNumberKeyReleased

    private void txtcarMakeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcarMakeKeyReleased
        // TODO add your handling code here:
        String PATTERN ="^[a-zA-Z].*[\\s\\.]*$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txtcarMake.getText());
        if(!match.matches()){
            errCarMake.setText( "Incorrect!!");
        }
        else{
            errCarMake.setText(null);
        }
    }//GEN-LAST:event_txtcarMakeKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkavailability;
    private javax.swing.JCheckBox chkmaintenanceExpired;
    private javax.swing.JLabel errCarMake;
    private javax.swing.JLabel errcity;
    private javax.swing.JLabel errmodelNumber;
    private javax.swing.JLabel errseatCount;
    private javax.swing.JLabel errserialNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblavailability;
    private javax.swing.JLabel lblcarMake;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lblmaintenanceExpired;
    private javax.swing.JLabel lblmanufacturingYear;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblseatCount;
    private javax.swing.JLabel lblserialNumber;
    private javax.swing.JTextField txtcarMake;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtmanufacturingYear;
    private javax.swing.JTextField txtmodelNumber;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtseatCount;
    private javax.swing.JTextField txtserialNumber;
    // End of variables declaration//GEN-END:variables
}
